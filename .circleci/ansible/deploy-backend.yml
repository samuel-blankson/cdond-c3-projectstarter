---
 - name: "configuration play." 
   hosts: web
   user: ubuntu
   gather_facts: false
   vars:
     - ansible_python_interpreter: /usr/bin/python3
     - ansible_host_key_checking: false
     - ansible_stdout_callback: yaml
     - os_environment:
         - key: TYPEORM_CONNECTION
           value: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
         - key: TYPEORM_ENTITIES
           value: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
         - key: TYPEORM_HOST
           value: "{{ lookup('env', 'TYPEORM_HOST')}}"
         - key: TYPEORM_PORT
           value: "{{ lookup('env', 'TYPEORM_PORT')}}"
         - key: TYPEORM_USERNAME
           value: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
         - key: TYPEORM_PASSWORD
           value: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
         - key: TYPEORM_DATABASE
           value: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
         - key: TYPEORM_MIGRATIONS
           value: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
         - key: TYPEORM_MIGRATIONS_DIR
           value: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}" 

   pre_tasks:
     - name: "wait 600 seconds for target connection to become reachable/usable."
       wait_for_connection:
        timeout: 600  

     - name: "install python for Ansible."
       become: true
       raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
       changed_when: false 

     - name: customize /etc/environment
       ansible.builtin.lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
        with_items: "{{ os_environment }}"       

    # Get the environment variables from CircleCI and add to the EC2 instance
   environment:
     - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
     - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
     - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
     - TYPEORM_PORT: 5432
     - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
     - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
     - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
     - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
     - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"  
       

   roles:
     - deploy
     - configure-prometheus-node-exporter
